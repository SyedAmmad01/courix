/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/features/charts/amcharts/stock-charts.js":
/*!******************************************************************************!*\
  !*** ./resources/metronic/js/pages/features/charts/amcharts/stock-charts.js ***!
  \******************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTamChartsStockChartsDemo = function () {\n  // Private functions\n  var demo1 = function demo1() {\n    var chartData1 = [];\n    var chartData2 = [];\n    var chartData3 = [];\n    var chartData4 = [];\n    generateChartData();\n    function generateChartData() {\n      var firstDate = new Date();\n      firstDate.setDate(firstDate.getDate() - 500);\n      firstDate.setHours(0, 0, 0, 0);\n      for (var i = 0; i < 500; i++) {\n        var newDate = new Date(firstDate);\n        newDate.setDate(newDate.getDate() + i);\n        var a1 = Math.round(Math.random() * (40 + i)) + 100 + i;\n        var b1 = Math.round(Math.random() * (1000 + i)) + 500 + i * 2;\n        var a2 = Math.round(Math.random() * (100 + i)) + 200 + i;\n        var b2 = Math.round(Math.random() * (1000 + i)) + 600 + i * 2;\n        var a3 = Math.round(Math.random() * (100 + i)) + 200;\n        var b3 = Math.round(Math.random() * (1000 + i)) + 600 + i * 2;\n        var a4 = Math.round(Math.random() * (100 + i)) + 200 + i;\n        var b4 = Math.round(Math.random() * (100 + i)) + 600 + i;\n        chartData1.push({\n          \"date\": newDate,\n          \"value\": a1,\n          \"volume\": b1\n        });\n        chartData2.push({\n          \"date\": newDate,\n          \"value\": a2,\n          \"volume\": b2\n        });\n        chartData3.push({\n          \"date\": newDate,\n          \"value\": a3,\n          \"volume\": b3\n        });\n        chartData4.push({\n          \"date\": newDate,\n          \"value\": a4,\n          \"volume\": b4\n        });\n      }\n    }\n    var chart = AmCharts.makeChart(\"kt_amcharts_1\", {\n      \"rtl\": KTUtil.isRTL(),\n      \"type\": \"stock\",\n      \"theme\": \"light\",\n      \"dataSets\": [{\n        \"title\": \"first data set\",\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }, {\n          \"fromField\": \"volume\",\n          \"toField\": \"volume\"\n        }],\n        \"dataProvider\": chartData1,\n        \"categoryField\": \"date\"\n      }, {\n        \"title\": \"second data set\",\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }, {\n          \"fromField\": \"volume\",\n          \"toField\": \"volume\"\n        }],\n        \"dataProvider\": chartData2,\n        \"categoryField\": \"date\"\n      }, {\n        \"title\": \"third data set\",\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }, {\n          \"fromField\": \"volume\",\n          \"toField\": \"volume\"\n        }],\n        \"dataProvider\": chartData3,\n        \"categoryField\": \"date\"\n      }, {\n        \"title\": \"fourth data set\",\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }, {\n          \"fromField\": \"volume\",\n          \"toField\": \"volume\"\n        }],\n        \"dataProvider\": chartData4,\n        \"categoryField\": \"date\"\n      }],\n      \"panels\": [{\n        \"showCategoryAxis\": false,\n        \"title\": \"Value\",\n        \"percentHeight\": 70,\n        \"stockGraphs\": [{\n          \"id\": \"g1\",\n          \"valueField\": \"value\",\n          \"comparable\": true,\n          \"compareField\": \"value\",\n          \"balloonText\": \"[[title]]:<b>[[value]]</b>\",\n          \"compareGraphBalloonText\": \"[[title]]:<b>[[value]]</b>\"\n        }],\n        \"stockLegend\": {\n          \"periodValueTextComparing\": \"[[percents.value.close]]%\",\n          \"periodValueTextRegular\": \"[[value.close]]\"\n        }\n      }, {\n        \"title\": \"Volume\",\n        \"percentHeight\": 30,\n        \"stockGraphs\": [{\n          \"valueField\": \"volume\",\n          \"type\": \"column\",\n          \"showBalloon\": false,\n          \"fillAlphas\": 1\n        }],\n        \"stockLegend\": {\n          \"periodValueTextRegular\": \"[[value.close]]\"\n        }\n      }],\n      \"chartScrollbarSettings\": {\n        \"graph\": \"g1\"\n      },\n      \"chartCursorSettings\": {\n        \"valueBalloonsEnabled\": true,\n        \"fullWidth\": true,\n        \"cursorAlpha\": 0.1,\n        \"valueLineBalloonEnabled\": true,\n        \"valueLineEnabled\": true,\n        \"valueLineAlpha\": 0.5\n      },\n      \"periodSelector\": {\n        \"position\": \"left\",\n        \"periods\": [{\n          \"period\": \"MM\",\n          \"selected\": true,\n          \"count\": 1,\n          \"label\": \"1 month\"\n        }, {\n          \"period\": \"YYYY\",\n          \"count\": 1,\n          \"label\": \"1 year\"\n        }, {\n          \"period\": \"YTD\",\n          \"label\": \"YTD\"\n        }, {\n          \"period\": \"MAX\",\n          \"label\": \"MAX\"\n        }]\n      },\n      \"dataSetSelector\": {\n        \"position\": \"left\"\n      },\n      \"export\": {\n        \"enabled\": true\n      }\n    });\n  };\n  var demo2 = function demo2() {\n    var chartData = [];\n    generateChartData();\n    function generateChartData() {\n      var firstDate = new Date(2012, 0, 1);\n      firstDate.setDate(firstDate.getDate() - 500);\n      firstDate.setHours(0, 0, 0, 0);\n      for (var i = 0; i < 500; i++) {\n        var newDate = new Date(firstDate);\n        newDate.setDate(newDate.getDate() + i);\n        var a = Math.round(Math.random() * (40 + i)) + 100 + i;\n        var b = Math.round(Math.random() * 100000000);\n        chartData.push({\n          \"date\": newDate,\n          \"value\": a,\n          \"volume\": b\n        });\n      }\n    }\n    var chart = AmCharts.makeChart(\"kt_amcharts_2\", {\n      \"type\": \"stock\",\n      \"theme\": \"light\",\n      \"dataSets\": [{\n        \"color\": \"#b0de09\",\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }, {\n          \"fromField\": \"volume\",\n          \"toField\": \"volume\"\n        }],\n        \"dataProvider\": chartData,\n        \"categoryField\": \"date\",\n        // EVENTS\n        \"stockEvents\": [{\n          \"date\": new Date(2010, 8, 19),\n          \"type\": \"sign\",\n          \"backgroundColor\": \"#85CDE6\",\n          \"graph\": \"g1\",\n          \"text\": \"S\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2010, 10, 19),\n          \"type\": \"flag\",\n          \"backgroundColor\": \"#FFFFFF\",\n          \"backgroundAlpha\": 0.5,\n          \"graph\": \"g1\",\n          \"text\": \"F\",\n          \"description\": \"Some longer\\ntext can also\\n be added\"\n        }, {\n          \"date\": new Date(2010, 11, 10),\n          \"showOnAxis\": true,\n          \"backgroundColor\": \"#85CDE6\",\n          \"type\": \"pin\",\n          \"text\": \"X\",\n          \"graph\": \"g1\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2010, 11, 26),\n          \"showOnAxis\": true,\n          \"backgroundColor\": \"#85CDE6\",\n          \"type\": \"pin\",\n          \"text\": \"Z\",\n          \"graph\": \"g1\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2011, 0, 3),\n          \"type\": \"sign\",\n          \"backgroundColor\": \"#85CDE6\",\n          \"graph\": \"g1\",\n          \"text\": \"U\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2011, 1, 6),\n          \"type\": \"sign\",\n          \"graph\": \"g1\",\n          \"text\": \"D\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2011, 3, 5),\n          \"type\": \"sign\",\n          \"graph\": \"g1\",\n          \"text\": \"L\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2011, 3, 5),\n          \"type\": \"sign\",\n          \"graph\": \"g1\",\n          \"text\": \"R\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2011, 5, 15),\n          \"type\": \"arrowUp\",\n          \"backgroundColor\": \"#00CC00\",\n          \"graph\": \"g1\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2011, 6, 25),\n          \"type\": \"arrowDown\",\n          \"backgroundColor\": \"#CC0000\",\n          \"graph\": \"g1\",\n          \"description\": \"This is description of an event\"\n        }, {\n          \"date\": new Date(2011, 8, 1),\n          \"type\": \"text\",\n          \"graph\": \"g1\",\n          \"text\": \"Longer text can\\nalso be displayed\",\n          \"description\": \"This is description of an event\"\n        }]\n      }],\n      \"panels\": [{\n        \"title\": \"Value\",\n        \"stockGraphs\": [{\n          \"id\": \"g1\",\n          \"valueField\": \"value\"\n        }],\n        \"stockLegend\": {\n          \"valueTextRegular\": \" \",\n          \"markerType\": \"none\"\n        }\n      }],\n      \"chartScrollbarSettings\": {\n        \"graph\": \"g1\"\n      },\n      \"chartCursorSettings\": {\n        \"valueBalloonsEnabled\": true,\n        \"graphBulletSize\": 1,\n        \"valueLineBalloonEnabled\": true,\n        \"valueLineEnabled\": true,\n        \"valueLineAlpha\": 0.5\n      },\n      \"periodSelector\": {\n        \"periods\": [{\n          \"period\": \"DD\",\n          \"count\": 10,\n          \"label\": \"10 days\"\n        }, {\n          \"period\": \"MM\",\n          \"count\": 1,\n          \"label\": \"1 month\"\n        }, {\n          \"period\": \"YYYY\",\n          \"count\": 1,\n          \"label\": \"1 year\"\n        }, {\n          \"period\": \"YTD\",\n          \"label\": \"YTD\"\n        }, {\n          \"period\": \"MAX\",\n          \"label\": \"MAX\"\n        }]\n      },\n      \"panelsSettings\": {\n        \"usePrefixes\": true\n      },\n      \"export\": {\n        \"enabled\": true\n      }\n    });\n  };\n  var demo3 = function demo3() {\n    var chartData = generateChartData();\n    function generateChartData() {\n      var chartData = [];\n      var firstDate = new Date(2012, 0, 1);\n      firstDate.setDate(firstDate.getDate() - 500);\n      firstDate.setHours(0, 0, 0, 0);\n      for (var i = 0; i < 500; i++) {\n        var newDate = new Date(firstDate);\n        newDate.setDate(newDate.getDate() + i);\n        var value = Math.round(Math.random() * (40 + i)) + 100 + i;\n        chartData.push({\n          \"date\": newDate,\n          \"value\": value\n        });\n      }\n      return chartData;\n    }\n    var chart = AmCharts.makeChart(\"kt_amcharts_3\", {\n      \"type\": \"stock\",\n      \"theme\": \"light\",\n      \"dataSets\": [{\n        \"color\": \"#b0de09\",\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }],\n        \"dataProvider\": chartData,\n        \"categoryField\": \"date\"\n      }],\n      \"panels\": [{\n        \"showCategoryAxis\": true,\n        \"title\": \"Value\",\n        \"eraseAll\": false,\n        \"allLabels\": [{\n          \"x\": 0,\n          \"y\": 115,\n          \"text\": \"Click on the pencil icon on top-right to start drawing\",\n          \"align\": \"center\",\n          \"size\": 16\n        }],\n        \"stockGraphs\": [{\n          \"id\": \"g1\",\n          \"valueField\": \"value\",\n          \"useDataSetColors\": false\n        }],\n        \"stockLegend\": {\n          \"valueTextRegular\": \" \",\n          \"markerType\": \"none\"\n        },\n        \"drawingIconsEnabled\": true\n      }],\n      \"chartScrollbarSettings\": {\n        \"graph\": \"g1\"\n      },\n      \"chartCursorSettings\": {\n        \"valueBalloonsEnabled\": true\n      },\n      \"periodSelector\": {\n        \"position\": \"bottom\",\n        \"periods\": [{\n          \"period\": \"DD\",\n          \"count\": 10,\n          \"label\": \"10 days\"\n        }, {\n          \"period\": \"MM\",\n          \"count\": 1,\n          \"label\": \"1 month\"\n        }, {\n          \"period\": \"YYYY\",\n          \"count\": 1,\n          \"label\": \"1 year\"\n        }, {\n          \"period\": \"YTD\",\n          \"label\": \"YTD\"\n        }, {\n          \"period\": \"MAX\",\n          \"label\": \"MAX\"\n        }]\n      }\n    });\n  };\n  var demo4 = function demo4() {\n    var chartData = generateChartData();\n    function generateChartData() {\n      var chartData = [];\n      var firstDate = new Date(2012, 0, 1);\n      firstDate.setDate(firstDate.getDate() - 1000);\n      firstDate.setHours(0, 0, 0, 0);\n      for (var i = 0; i < 1000; i++) {\n        var newDate = new Date(firstDate);\n        newDate.setHours(0, i, 0, 0);\n        var a = Math.round(Math.random() * (40 + i)) + 100 + i;\n        var b = Math.round(Math.random() * 100000000);\n        chartData.push({\n          \"date\": newDate,\n          \"value\": a,\n          \"volume\": b\n        });\n      }\n      return chartData;\n    }\n    var chart = AmCharts.makeChart(\"kt_amcharts_4\", {\n      \"type\": \"stock\",\n      \"theme\": \"light\",\n      \"categoryAxesSettings\": {\n        \"minPeriod\": \"mm\"\n      },\n      \"dataSets\": [{\n        \"color\": \"#b0de09\",\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }, {\n          \"fromField\": \"volume\",\n          \"toField\": \"volume\"\n        }],\n        \"dataProvider\": chartData,\n        \"categoryField\": \"date\"\n      }],\n      \"panels\": [{\n        \"showCategoryAxis\": false,\n        \"title\": \"Value\",\n        \"percentHeight\": 70,\n        \"stockGraphs\": [{\n          \"id\": \"g1\",\n          \"valueField\": \"value\",\n          \"type\": \"smoothedLine\",\n          \"lineThickness\": 2,\n          \"bullet\": \"round\"\n        }],\n        \"stockLegend\": {\n          \"valueTextRegular\": \" \",\n          \"markerType\": \"none\"\n        }\n      }, {\n        \"title\": \"Volume\",\n        \"percentHeight\": 30,\n        \"stockGraphs\": [{\n          \"valueField\": \"volume\",\n          \"type\": \"column\",\n          \"cornerRadiusTop\": 2,\n          \"fillAlphas\": 1\n        }],\n        \"stockLegend\": {\n          \"valueTextRegular\": \" \",\n          \"markerType\": \"none\"\n        }\n      }],\n      \"chartScrollbarSettings\": {\n        \"graph\": \"g1\",\n        \"usePeriod\": \"10mm\",\n        \"position\": \"top\"\n      },\n      \"chartCursorSettings\": {\n        \"valueBalloonsEnabled\": true\n      },\n      \"periodSelector\": {\n        \"position\": \"top\",\n        \"dateFormat\": \"YYYY-MM-DD JJ:NN\",\n        \"inputFieldWidth\": 150,\n        \"periods\": [{\n          \"period\": \"hh\",\n          \"count\": 1,\n          \"label\": \"1 hour\",\n          \"selected\": true\n        }, {\n          \"period\": \"hh\",\n          \"count\": 2,\n          \"label\": \"2 hours\"\n        }, {\n          \"period\": \"hh\",\n          \"count\": 5,\n          \"label\": \"5 hour\"\n        }, {\n          \"period\": \"hh\",\n          \"count\": 12,\n          \"label\": \"12 hours\"\n        }, {\n          \"period\": \"MAX\",\n          \"label\": \"MAX\"\n        }]\n      },\n      \"panelsSettings\": {\n        \"usePrefixes\": true\n      },\n      \"export\": {\n        \"enabled\": true,\n        \"position\": \"bottom-right\"\n      }\n    });\n  };\n  var demo5 = function demo5() {\n    var chartData = [];\n    generateChartData();\n    function generateChartData() {\n      var firstDate = new Date();\n      firstDate.setHours(0, 0, 0, 0);\n      firstDate.setDate(firstDate.getDate() - 2000);\n      for (var i = 0; i < 2000; i++) {\n        var newDate = new Date(firstDate);\n        newDate.setDate(newDate.getDate() + i);\n        var open = Math.round(Math.random() * 30 + 100);\n        var close = open + Math.round(Math.random() * 15 - Math.random() * 10);\n        var low;\n        if (open < close) {\n          low = open - Math.round(Math.random() * 5);\n        } else {\n          low = close - Math.round(Math.random() * 5);\n        }\n        var high;\n        if (open < close) {\n          high = close + Math.round(Math.random() * 5);\n        } else {\n          high = open + Math.round(Math.random() * 5);\n        }\n        var volume = Math.round(Math.random() * (1000 + i)) + 100 + i;\n        var value = Math.round(Math.random() * 30 + 100);\n        chartData[i] = {\n          \"date\": newDate,\n          \"open\": open,\n          \"close\": close,\n          \"high\": high,\n          \"low\": low,\n          \"volume\": volume,\n          \"value\": value\n        };\n      }\n    }\n    var chart = AmCharts.makeChart(\"kt_amcharts_5\", {\n      \"type\": \"stock\",\n      \"theme\": \"light\",\n      \"dataSets\": [{\n        \"fieldMappings\": [{\n          \"fromField\": \"open\",\n          \"toField\": \"open\"\n        }, {\n          \"fromField\": \"close\",\n          \"toField\": \"close\"\n        }, {\n          \"fromField\": \"high\",\n          \"toField\": \"high\"\n        }, {\n          \"fromField\": \"low\",\n          \"toField\": \"low\"\n        }, {\n          \"fromField\": \"volume\",\n          \"toField\": \"volume\"\n        }, {\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }],\n        \"color\": \"#7f8da9\",\n        \"dataProvider\": chartData,\n        \"title\": \"West Stock\",\n        \"categoryField\": \"date\"\n      }, {\n        \"fieldMappings\": [{\n          \"fromField\": \"value\",\n          \"toField\": \"value\"\n        }],\n        \"color\": \"#fac314\",\n        \"dataProvider\": chartData,\n        \"compared\": true,\n        \"title\": \"East Stock\",\n        \"categoryField\": \"date\"\n      }],\n      \"panels\": [{\n        \"title\": \"Value\",\n        \"showCategoryAxis\": false,\n        \"percentHeight\": 70,\n        \"valueAxes\": [{\n          \"id\": \"v1\",\n          \"dashLength\": 5\n        }],\n        \"categoryAxis\": {\n          \"dashLength\": 5\n        },\n        \"stockGraphs\": [{\n          \"type\": \"candlestick\",\n          \"id\": \"g1\",\n          \"openField\": \"open\",\n          \"closeField\": \"close\",\n          \"highField\": \"high\",\n          \"lowField\": \"low\",\n          \"valueField\": \"close\",\n          \"lineColor\": \"#7f8da9\",\n          \"fillColors\": \"#7f8da9\",\n          \"negativeLineColor\": \"#db4c3c\",\n          \"negativeFillColors\": \"#db4c3c\",\n          \"fillAlphas\": 1,\n          \"useDataSetColors\": false,\n          \"comparable\": true,\n          \"compareField\": \"value\",\n          \"showBalloon\": false,\n          \"proCandlesticks\": true\n        }],\n        \"stockLegend\": {\n          \"valueTextRegular\": undefined,\n          \"periodValueTextComparing\": \"[[percents.value.close]]%\"\n        }\n      }, {\n        \"title\": \"Volume\",\n        \"percentHeight\": 30,\n        \"marginTop\": 1,\n        \"showCategoryAxis\": true,\n        \"valueAxes\": [{\n          \"dashLength\": 5\n        }],\n        \"categoryAxis\": {\n          \"dashLength\": 5\n        },\n        \"stockGraphs\": [{\n          \"valueField\": \"volume\",\n          \"type\": \"column\",\n          \"showBalloon\": false,\n          \"fillAlphas\": 1\n        }],\n        \"stockLegend\": {\n          \"markerType\": \"none\",\n          \"markerSize\": 0,\n          \"labelText\": \"\",\n          \"periodValueTextRegular\": \"[[value.close]]\"\n        }\n      }],\n      \"chartScrollbarSettings\": {\n        \"graph\": \"g1\",\n        \"graphType\": \"line\",\n        \"usePeriod\": \"WW\"\n      },\n      \"chartCursorSettings\": {\n        \"valueLineBalloonEnabled\": true,\n        \"valueLineEnabled\": true\n      },\n      \"periodSelector\": {\n        \"position\": \"bottom\",\n        \"periods\": [{\n          \"period\": \"DD\",\n          \"count\": 10,\n          \"label\": \"10 days\"\n        }, {\n          \"period\": \"MM\",\n          \"selected\": true,\n          \"count\": 1,\n          \"label\": \"1 month\"\n        }, {\n          \"period\": \"YYYY\",\n          \"count\": 1,\n          \"label\": \"1 year\"\n        }, {\n          \"period\": \"YTD\",\n          \"label\": \"YTD\"\n        }, {\n          \"period\": \"MAX\",\n          \"label\": \"MAX\"\n        }]\n      },\n      \"export\": {\n        \"enabled\": true\n      }\n    });\n  };\n  return {\n    // public functions\n    init: function init() {\n      demo1();\n      demo2();\n      demo3();\n      demo4();\n      demo5();\n    }\n  };\n}();\njQuery(document).ready(function () {\n  KTamChartsStockChartsDemo.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/features/charts/amcharts/stock-charts.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/features/charts/amcharts/stock-charts.js"]();
/******/ 	
/******/ })()
;