/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/crud/forms/validation/form-controls.js":
/*!****************************************************************************!*\
  !*** ./resources/metronic/js/pages/crud/forms/validation/form-controls.js ***!
  \****************************************************************************/
/***/ (() => {

eval("// Class definition\nvar KTFormControls = function () {\n  // Private functions\n  var _initDemo1 = function _initDemo1() {\n    FormValidation.formValidation(document.getElementById('kt_form_1'), {\n      fields: {\n        email: {\n          validators: {\n            notEmpty: {\n              message: 'Email is required'\n            },\n            emailAddress: {\n              message: 'The value is not a valid email address'\n            }\n          }\n        },\n        url: {\n          validators: {\n            notEmpty: {\n              message: 'Website URL is required'\n            },\n            uri: {\n              message: 'The website address is not valid'\n            }\n          }\n        },\n        digits: {\n          validators: {\n            notEmpty: {\n              message: 'Digits is required'\n            },\n            digits: {\n              message: 'The velue is not a valid digits'\n            }\n          }\n        },\n        creditcard: {\n          validators: {\n            notEmpty: {\n              message: 'Credit card number is required'\n            },\n            creditCard: {\n              message: 'The credit card number is not valid'\n            }\n          }\n        },\n        phone: {\n          validators: {\n            notEmpty: {\n              message: 'US phone number is required'\n            },\n            phone: {\n              country: 'US',\n              message: 'The value is not a valid US phone number'\n            }\n          }\n        },\n        option: {\n          validators: {\n            notEmpty: {\n              message: 'Please select an option'\n            }\n          }\n        },\n        options: {\n          validators: {\n            choice: {\n              min: 2,\n              max: 5,\n              message: 'Please select at least 2 and maximum 5 options'\n            }\n          }\n        },\n        memo: {\n          validators: {\n            notEmpty: {\n              message: 'Please enter memo text'\n            },\n            stringLength: {\n              min: 50,\n              max: 100,\n              message: 'Please enter a menu within text length range 50 and 100'\n            }\n          }\n        },\n        checkbox: {\n          validators: {\n            choice: {\n              min: 1,\n              message: 'Please kindly check this'\n            }\n          }\n        },\n        checkboxes: {\n          validators: {\n            choice: {\n              min: 2,\n              max: 5,\n              message: 'Please check at least 1 and maximum 2 options'\n            }\n          }\n        },\n        radios: {\n          validators: {\n            choice: {\n              min: 1,\n              message: 'Please kindly check this'\n            }\n          }\n        }\n      },\n      plugins: {\n        //Learn more: https://formvalidation.io/guide/plugins\n        trigger: new FormValidation.plugins.Trigger(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap(),\n        // Validate fields when clicking the Submit button\n        submitButton: new FormValidation.plugins.SubmitButton(),\n        // Submit the form when all fields are valid\n        defaultSubmit: new FormValidation.plugins.DefaultSubmit()\n      }\n    });\n  };\n  var _initDemo2 = function _initDemo2() {\n    FormValidation.formValidation(document.getElementById('kt_form_2'), {\n      fields: {\n        billing_card_name: {\n          validators: {\n            notEmpty: {\n              message: 'Card Holder Name is required'\n            }\n          }\n        },\n        billing_card_number: {\n          validators: {\n            notEmpty: {\n              message: 'Credit card number is required'\n            },\n            creditCard: {\n              message: 'The credit card number is not valid'\n            }\n          }\n        },\n        billing_card_exp_month: {\n          validators: {\n            notEmpty: {\n              message: 'Expiry Month is required'\n            }\n          }\n        },\n        billing_card_exp_year: {\n          validators: {\n            notEmpty: {\n              message: 'Expiry Year is required'\n            }\n          }\n        },\n        billing_card_cvv: {\n          validators: {\n            notEmpty: {\n              message: 'CVV is required'\n            },\n            digits: {\n              message: 'The CVV velue is not a valid digits'\n            }\n          }\n        },\n        billing_address_1: {\n          validators: {\n            notEmpty: {\n              message: 'Address 1 is required'\n            }\n          }\n        },\n        billing_city: {\n          validators: {\n            notEmpty: {\n              message: 'City 1 is required'\n            }\n          }\n        },\n        billing_state: {\n          validators: {\n            notEmpty: {\n              message: 'State 1 is required'\n            }\n          }\n        },\n        billing_zip: {\n          validators: {\n            notEmpty: {\n              message: 'Zip Code is required'\n            },\n            zipCode: {\n              country: 'US',\n              message: 'The Zip Code value is invalid'\n            }\n          }\n        },\n        billing_delivery: {\n          validators: {\n            choice: {\n              min: 1,\n              message: 'Please kindly select delivery type'\n            }\n          }\n        },\n        \"package\": {\n          validators: {\n            choice: {\n              min: 1,\n              message: 'Please kindly select package type'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Validate fields when clicking the Submit button\n        submitButton: new FormValidation.plugins.SubmitButton(),\n        // Submit the form when all fields are valid\n        defaultSubmit: new FormValidation.plugins.DefaultSubmit(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap({\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    });\n  };\n  return {\n    // public functions\n    init: function init() {\n      _initDemo1();\n      _initDemo2();\n    }\n  };\n}();\njQuery(document).ready(function () {\n  KTFormControls.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/crud/forms/validation/form-controls.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/crud/forms/validation/form-controls.js"]();
/******/ 	
/******/ })()
;