/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/metronic/js/pages/crud/forms/validation/form-widgets.js":
/*!***************************************************************************!*\
  !*** ./resources/metronic/js/pages/crud/forms/validation/form-widgets.js ***!
  \***************************************************************************/
/***/ (() => {

eval("// Class definition\n\nvar KTFormWidgetsValidation = function () {\n  // Private functions\n  var validator;\n  var _initWidgets = function _initWidgets() {\n    // Initialize Plugins\n    // Datepicker\n    $('#kt_datepicker').datepicker({\n      todayHighlight: true,\n      templates: {\n        leftArrow: '<i class=\\\"la la-angle-left\\\"></i>',\n        rightArrow: '<i class=\\\"la la-angle-right\\\"></i>'\n      }\n    }).on('changeDate', function (e) {\n      // Revalidate field\n      validator.revalidateField('date');\n    });\n\n    // Datetimepicker\n    $('#kt_datetimepicker').datetimepicker({\n      pickerPosition: 'bottom-left',\n      todayHighlight: true,\n      autoclose: true,\n      format: 'yyyy.mm.dd hh:ii'\n    });\n    $('#kt_datetimepicker').change(function () {\n      // Revalidate field\n      validator.revalidateField('datetime');\n    });\n\n    // Timepicker\n    $('#kt_timepicker').timepicker({\n      minuteStep: 1,\n      showSeconds: true,\n      showMeridian: true\n    });\n    $('#kt_timepicker').change(function () {\n      // Revalidate field\n      validator.revalidateField('time');\n    });\n\n    // Daterangepicker\n    $('#kt_daterangepicker').daterangepicker({\n      buttonClasses: ' btn',\n      applyClass: 'btn-primary',\n      cancelClass: 'btn-light-primary'\n    }, function (start, end, label) {\n      var input = $('#kt_daterangepicker').find('.form-control');\n      input.val(start.format('YYYY/MM/DD') + ' / ' + end.format('YYYY/MM/DD'));\n\n      // Revalidate field\n      validator.revalidateField('daterangepicker');\n    });\n\n    // Bootstrap Switch\n    $('[data-switch=true]').bootstrapSwitch();\n    $('[data-switch=true]').on('switchChange.bootstrapSwitch', function () {\n      // Revalidate field\n      validator.revalidateField('switch');\n    });\n\n    // Bootstrap Select\n    $('#kt_bootstrap_select').selectpicker();\n    $('#kt_bootstrap_select').on('changed.bs.select', function () {\n      // Revalidate field\n      validator.revalidateField('select');\n    });\n\n    // Select2\n    $('#kt_select2').select2({\n      placeholder: \"Select a state\"\n    });\n    $('#kt_select2').on('change', function () {\n      // Revalidate field\n      validator.revalidateField('select2');\n    });\n\n    // Typeahead\n    var countries = new Bloodhound({\n      datumTokenizer: Bloodhound.tokenizers.whitespace,\n      queryTokenizer: Bloodhound.tokenizers.whitespace,\n      prefetch: HOST_URL + '/api/?file=typeahead/countries.json'\n    });\n    $('#kt_typeahead').typeahead(null, {\n      name: 'countries',\n      source: countries\n    });\n    $('#kt_typeahead').bind('typeahead:select', function (ev, suggestion) {\n      // Revalidate field\n      validator.revalidateField('typeahead');\n    });\n  };\n  var _initValidation = function _initValidation() {\n    // Validation Rules\n    validator = FormValidation.formValidation(document.getElementById('kt_form'), {\n      fields: {\n        date: {\n          validators: {\n            notEmpty: {\n              message: 'Date is required'\n            }\n          }\n        },\n        daterangepicker: {\n          validators: {\n            notEmpty: {\n              message: 'Daterange is required'\n            }\n          }\n        },\n        datetime: {\n          validators: {\n            notEmpty: {\n              message: 'Datetime is required'\n            }\n          }\n        },\n        time: {\n          validators: {\n            notEmpty: {\n              message: 'Time is required'\n            }\n          }\n        },\n        select: {\n          validators: {\n            notEmpty: {\n              message: 'Select is required'\n            }\n          }\n        },\n        select2: {\n          validators: {\n            notEmpty: {\n              message: 'Select2 is required'\n            }\n          }\n        },\n        typeahead: {\n          validators: {\n            notEmpty: {\n              message: 'Typeahead is required'\n            }\n          }\n        },\n        \"switch\": {\n          validators: {\n            notEmpty: {\n              message: 'Typeahead is required'\n            }\n          }\n        },\n        markdown: {\n          validators: {\n            notEmpty: {\n              message: 'Typeahead is required'\n            }\n          }\n        }\n      },\n      plugins: {\n        trigger: new FormValidation.plugins.Trigger(),\n        // Validate fields when clicking the Submit button\n        submitButton: new FormValidation.plugins.SubmitButton(),\n        // Submit the form when all fields are valid\n        defaultSubmit: new FormValidation.plugins.DefaultSubmit(),\n        // Bootstrap Framework Integration\n        bootstrap: new FormValidation.plugins.Bootstrap({\n          eleInvalidClass: '',\n          eleValidClass: ''\n        })\n      }\n    });\n  };\n  return {\n    // public functions\n    init: function init() {\n      _initWidgets();\n      _initValidation();\n    }\n  };\n}();\njQuery(document).ready(function () {\n  KTFormWidgetsValidation.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/metronic/js/pages/crud/forms/validation/form-widgets.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/metronic/js/pages/crud/forms/validation/form-widgets.js"]();
/******/ 	
/******/ })()
;